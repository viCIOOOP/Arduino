                        Синтаксис

Тела функций заключаются в фигурные скобки { }.

Каждая команда заканчивается точкой с запятой ;

Метод применяется к объекту через точку. Пример: Serial.begin();

Вызов функции или метода всегда заканчивается скобками

Запятыми перечисляются аргументы функций и методов, члены массива, также через запятую можно выполнить несколько действий в одну строчку. 
Пример: digitalWrite(3, HIGH);


Одиночный символ заключается в одиночные кавычки 'а'

Строка и массив символов заключается в двойные кавычки "строка"
_______________________________________________________________________________________________________________________________________________

                         Оформление
Есть такое понятие, как форматирование (выравнивание) кода, то есть соблюдение пробелов и интервалов.

Между математическими действиями, знаками сравнения, присваивания и всем подобным ставится пробел.

Отступ от левого края экрана - знак табуляции, код сдвигается вправо и на одном расстоянии формируются команды из одного блока кода(В Arduino IDE одна табуляция равна двум пробела).

Имена функций и переменных принято называть с маленькой буквы.

Если имя состоит из двух и более слов, то их принято разделять. Есть дво основных способа:
1. camelCase (верблюжий стиль): первая буква маленькая, каждая первая буква следующего слова - большая.
2. under_score (подчёркивание): все буквы маленькие, разделитель - подчёркивание.

Имена типов данных и классов принято писать с большой буквы. Пример: Signal

Имена констант принято писать в верхнем регистре, разделение - подчеркивание.

При написании библиотек и классов, имена внутренних (приватных) переменных принят писать, начиная со знака 
подчёркивания. Пример: _position

Несколько общепринятых сокращений для названий переменных:
button - btn, кнопка

index - idx - i, индекс

buffer - buf, буфер

value - val, значение

variable - var, переменная

pointer - ptr, указатель

Имена функций и методов принято начинать с глагола, кратко описывающего действие функции.
get - получить значение (getValue)

set - установить значение (setTime)

print, show - показать что-то

read - прочитать

write - записать

change - изменить

clear - очистить

begin, start - начать

end, stop - закончить, остановит
___________________________________________________________________________________________________________________________________________________

                         Структура кода 
Переменная любого типа должна вызываться только после своего объявления.

Объявление и использование классов или типов данных из библиотеки/файла должно быть после подключения библиотеки/файла

Функция может вызываться как до, так и после объявления.

Код в блоке setup() выполняется один раз при каждом запуске МК

Код в блоке loop() выполняется "по кругу" на всём протяжении работы программы, начиная с момента завершения выполнения setup().
____________________________________________________________________________________________________________________________________________________

                         Подключение библиотек и файлов

вы очень часто будете использовать библиотеки или просто внешние файлы, они подключаются в главный файл
при помощи директивы #include. Данная команда сообщает компилятору, что нужно найти и добавить в программу указанный файл.
Пример:
#include <Servo.h> // подключает библиотеку Servo.h
#include “Servo.h” // тоже подключает библиотеку Servo.h

Когда указываем название "в кавычках", компилятор сначала ищет файл в папке со скетчем, а затем в папке с библиотеками.
При использовании <галочек> компилятор ищет файл только в папке с библиотеками.
                         Не используйте мышку!(сочетания клавишь которые ускорят написание кода)

Ctrl+← , Ctrl+→ – переместить курсор влево/вправо НА ОДНО СЛОВО
Home , End – переместить курсор в начало/конец строки

Shift+← , Shift+→ – выделить символ слева/справа от курсора

Shift+Ctrl+← , Shift+Ctrl+→ – выделить слово слева/справа от курсора

Shift+Home , Shift+End – выделить все символы от текущего положения курсора до начала/конца строки

Ctrl+Z – отменить последнее действие

Ctrl+Y – повторить отменённое действие

Ctrl+C – копировать выделенный текст

Ctrl+X – вырезать выделенный текст

Ctrl+V – вставить текст из буфера обмена

Местные сочетания:

Ctrl+U – загрузить прошивку в Arduino

Ctrl+R – скомпилировать (проверить)

Ctrl+Shift+M – открыть монитор порта

Ctrl+T - автоформатирование